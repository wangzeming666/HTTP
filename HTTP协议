    HTTP是一个客户端和服务器端请求和应答的标准(TCP)。客户端是终端用户，服务器端是网站。通常，由HTTP客户端发起一个请求，建立一个到服务器
指定端口(默认是80)的TCP连接。HTTP服务器则在那个端口监听客户端发送过来的请求。一旦收到请求，服务器向客户端发回一个状态行，比如HTTP/1.1 200 OK，
和响应的消息，消息的消息体可能是请求的文件、错误消息、或者其他一些信息。HTTP使用TCP而不是UDP的原因在于打开一个网页必须传送很多数据，而TCP协议
提供传输控制，按顺序阻止数据，和错误纠正。
    通过HTTP或者HTTPS协议请求的资源由统一资源标示符(Uniform Resource Identifiers)或统一资源定位符(Uniform Resource Locator)来标识。
    HTTP(HyperText Transport Protocol)超文本传输协议。
    HTTP协议采用了请求/响应模型。客户端项服务器发送一个请求，请求包含请求的方法、URL、协议版本以及包含请求修饰符、客户信息和内容的类似于MIME的
消息结构。服务器以一个状态行作为响应，相应的内容包括消息协议的版本、成功或者错误编码加上包含服务器信息、尸体源信息以及可能的实体内容。
    通常HTTP消息包括客户机向服务器的请求消息和服务器向客户机的响应消息。这两种类型的消息由一个起始行，一个或多个头域，一个指示头域结束的空行和
可选的消息体组成。HTTP的头域包括通用头，请求头，响应头和实体头四个部分。每个头域由一个域名，冒号和域值三部分组成。
    通用头域：通用头域包含请求和响应都支持的头域，通用头域包含Cache-Control、Connection、Date、Pragma、Transfer-Encoding、Upgrade、Via。
对通用头域的扩展要求通讯双方都支持次扩展，如果存在不支持的通用头域，一般将会作为实体头域处理。
    常见的通用头域：Cache-Control指定请求和响应遵循的缓存机制。Keep-Alive功能是客户端到服务器短的连接持续有效，当出现对服务器的后继请求时，
Keep-alive功能避免了重新建立连接。
    KeepAlive Time值控制TCP/IP尝试验证空闲连接是否完好的频率。如果这短时间内没有活动，则会保持活动信号。如果网络工作正常，而且接收方是活动的，
它就会响应。如果需要对丢失接收方敏感，可考虑减少这个值。
    Date头域标识消息发送的时间。
    Pragma头域用来包含实现指定的指令，如Pragma:no-cache。它与HTTP/1.1协议中的Cache-Control:no-cache相同。
    
    请求消息的第一行为请求的方法，必须是大写，包括OPTIONS、GET、HEAD、POST、PUT、DELETE、TRACE。方法GET和HEAD应被所有的通用WEB服务器支持，
其他方法可选。
